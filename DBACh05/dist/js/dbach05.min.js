/*! dbach05 02-07-2016 */
var app=app||{},ENTER_KEY=13;$(function(){console.log("app.js - new app.AppView()"),new app.AppView});var app=app||{},TodoList=Backbone.Collection.extend({model:app.Todo,localStorage:new Backbone.LocalStorage("todos-backbone"),completed:function(){return console.log("collections/todos.js - inside TodoList completed()"),this.filter(function(a){return a.get("completed")})},remaining:function(){return console.log("collections/todos.js - inside TodoList remaining()"),this.without.apply(this,this.completed())},nextOrder:function(){return console.log("collections/todos.js - inside TodoList nextOrder()"),this.length?this.last().get("order")+1:1},comparator:function(a){return console.log("collections/todos.js - inside TodoList comparator()"),a.get("order")}});app.Todos=new TodoList;var app=app||{};app.Todo=Backbone.Model.extend({defaults:{title:"",completed:!1},toggle:function(){console.log("models/todo.js - inside app.Todo toggle()"),this.save({completed:!this.get("completed")})}});var app=app||{},Workspace=Backbone.Router.extend({routes:{"*filter":"setFilter"},setFilter:function(a){console.log("routers/router.js - inside app.ToDoRouter setFilter(param)"),a&&(a=a.trim()),app.TodoFilter=a||"",app.Todos.trigger("filter")}});app.TodoRouter=new Workspace,Backbone.history.start();var app=app||{};app.AppView=Backbone.View.extend({el:"#todoapp",statsTemplate:_.template($("#stats-template").html()),events:{"keypress #new-todo":"createOnEnter","click #clear-completed":"clearCompleted","click #toggle-all":"toggleAllComplete"},initialize:function(){console.log("views/app.js - inside app.AppView initialize()"),this.allCheckbox=this.$("#toggle-all")[0],this.$input=this.$("#new-todo"),this.$footer=this.$("#footer"),this.$main=this.$("#main"),this.listenTo(app.Todos,"add",this.addOne),this.listenTo(app.Todos,"reset",this.addAll),this.listenTo(app.Todos,"change:completed",this.filterOne),this.listenTo(app.Todos,"filter",this.filterAll),this.listenTo(app.Todos,"all",this.render),app.Todos.fetch()},render:function(){console.log("views/app.js - inside app.AppView render()");var a=app.Todos.completed().length,b=app.Todos.remaining().length;app.Todos.length?(this.$main.show(),this.$footer.show(),this.$footer.html(this.statsTemplate({completed:a,remaining:b})),this.$("#filters li a").removeClass("selected").filter('[href="#/'+(app.TodoFilter||"")+'"]').addClass("selected")):(this.$main.hide(),this.$footer.hide()),this.allCheckbox.checked=!b},addOne:function(a){console.log("views/app.js - inside app.AppView addOne(todo)");var b=new app.TodoView({model:a});$("#todo-list").append(b.render().el)},addAll:function(){console.log("views/app.js - inside app.AppView addAll()"),this.$("#todo-list").html(""),app.Todos.each(this.addOne,this)},filterOne:function(a){console.log("views/app.js - inside app.AppView filterOne(todo)"),a.trigger("visible")},filterAll:function(){console.log("views/app.js - inside app.AppView filterAll()"),app.Todos.each(this.filterOne,this)},newAttributes:function(){return console.log("views/app.js - inside app.AppView newAttributes()"),{title:this.$input.val().trim(),order:app.Todos.nextOrder(),completed:!1}},createOnEnter:function(a){console.log("views/app.js - inside app.AppView createOnEnter(event)"),a.which===ENTER_KEY&&this.$input.val().trim()&&(app.Todos.create(this.newAttributes()),this.$input.val(""))},clearCompleted:function(){return console.log("views/app.js - inside app.AppView clearCompleted()"),_.invoke(app.Todos.completed(),"destroy"),!1},toggleAllComplete:function(){console.log("views/app.js - inside app.AppView toggleAllComplete()");var a=this.allCheckbox.checked;app.Todos.each(function(b){b.save({completed:a})})}});var app=app||{};app.TodoView=Backbone.View.extend({tagName:"li",template:_.template($("#item-template").html()),events:{"click .toggle":"toggleCompleted","dblclick label":"edit","click .destroy":"clear","keypress .edit":"updateOnEnter","blur .edit":"close"},initialize:function(){console.log("views/todos.js - inside app.TodoView initialize()"),this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.remove),this.listenTo(this.model,"visible",this.toggleVisible)},render:function(){return console.log("views/todos.js - inside app.TodoView render()"),this.$el.html(this.template(this.model.attributes)),this.$el.toggleClass("completed",this.model.get("completed")),this.toggleVisible(),this.$input=this.$(".edit"),this},toggleVisible:function(){console.log("views/todos.js - inside app.TodoView toggleVisible()"),this.$el.toggleClass("hidden",this.isHidden())},isHidden:function(){console.log("views/todos.js - inside app.TodoView isHidden()");var a=this.model.get("completed");return!a&&"completed"===app.TodoFilter||a&&"active"===app.TodoFilter},toggleCompleted:function(){console.log("views/todos.js - inside app.TodoView toggleCompleted()"),this.model.toggle()},edit:function(){console.log("views/todos.js - inside app.TodoView edit()"),this.$el.addClass("editing"),this.$input.focus()},close:function(){console.log("views/todos.js - inside app.TodoView close()");var a=this.$input.val().trim();a?this.model.save({title:a}):this.clear(),this.$el.removeClass("editing")},updateOnEnter:function(a){console.log("views/todos.js - inside app.TodoView updateOnEnter(e)"),a.which===ENTER_KEY&&this.close()},clear:function(){console.log("views/todos.js - inside app.TodoView clear()"),this.model.destroy()}});